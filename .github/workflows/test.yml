name: 'Test Suite'

on: [push, pull_request, workflow_dispatch]
    
jobs:
  file-changes:
    name: Detect File Changes
    runs-on: 'ubuntu-latest'
    outputs: 
      checkall: ${{ steps.changes.outputs.checkall }}
    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Detect Changes
        uses: dorny/paths-filter@v3
        id: changes
        with: 
          filters: ".github/file-filter.yml"

  github:
    name: Github
    if: needs.file-changes.outputs.checkall == 'true'
    needs: file-changes
    strategy:
      matrix:
        os:    ['ubuntu', 'macos']
        mpi:   ['mpi']
        precision: ['']
        debug: ['debug', 'no-debug']
        intel: [true, false]
        exclude:
          - os:    macos
            intel: true

        include:
          - os:    ubuntu
            mpi:   no-mpi
            precision: single
            debug: no-debug
            intel: false

      fail-fast: false
    continue-on-error: true
    runs-on: ${{ matrix.os }}-latest

    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Install Dependencies (Unified Script)
        run: |
          chmod +x ./scripts/install_dependencies.sh
          ./scripts/install_dependencies.sh

      - name: Verify dependency installation
        run: |
          cmake --version
          gcc --version
          python3 --version

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Build
        run:  |
          /bin/bash mfc.sh test --dry-run -j $(nproc) --${{ matrix.debug }} --${{ matrix.mpi }} --${{ matrix.precision }} 

      - name: Test
        run:  |
          /bin/bash mfc.sh test --max-attempts 3 -j $(nproc) $OPT1 $OPT2
        env:
          OPT1: ${{ matrix.mpi == 'mpi' && '--test-all' || '' }}
          OPT2: ${{ matrix.debug == 'debug' && '-% 20' || '' }}

  self:
    name: Self Hosted
    if: github.repository == 'MFlowCode/MFC' && needs.file-changes.outputs.checkall == 'true'
    needs: file-changes
    continue-on-error: false
    timeout-minutes: 1400
    strategy:
      matrix:
        device: ['cpu', 'gpu']
        lbl: ['gt', 'frontier']
    runs-on:
      group:  phoenix
      labels: ${{ matrix.lbl }}
    env:
      NODE_OPTIONS: ${{ matrix.lbl == 'gt' && '--max-old-space-size=2048' || '' }}
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Build & Test
        if:   matrix.lbl == 'gt'
        run:  bash .github/workflows/phoenix/submit.sh .github/workflows/phoenix/test.sh ${{ matrix.device }}

      - name: Build
        if:   matrix.lbl == 'frontier'
        run:  bash .github/workflows/frontier/build.sh ${{ matrix.device }}

      - name: Test
        if:   matrix.lbl == 'frontier'
        run:  bash .github/workflows/frontier/submit.sh .github/workflows/frontier/test.sh ${{matrix.device}}

      - name: Print Logs
        if:   always()
        run:  cat test-${{ matrix.device }}.out

      - name: Archive Logs
        uses: actions/upload-artifact@v4
        if:   matrix.lbl == 'frontier'
        with:
          name: logs-${{ strategy.job-index }}-${{ matrix.device }}
          path: test-${{ matrix.device }}.out