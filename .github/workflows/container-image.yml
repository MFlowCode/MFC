name: Build Singularity Images

on:
  push:

jobs:
  Build-singularity-images:
    name: Build Singularity Images
    runs-on: ubuntu-latest
    steps:
      - name: Clone - PR
        uses: actions/checkout@v4
        with:
          path: pr

      - name: Containerize Images
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common openssh-client
          sudo add-apt-repository -y ppa:apptainer/ppa
          sudo apt-get install -y apptainer
          sudo apptainer config fakeroot --enable $(whoami)

          sudo apt-get clean
          sudo rm -rf /tmp/* /var/lib/apt/lists/* /opt/hostedtoolcache /usr/local/lib/android /usr/share/dotnet /opt/ghc /usr/local/share/boost /usr/lib/jvm /home/runner/.cache /home/runner/work/_temp
          docker system prune -af || true

          mkdir -p ~/.ssh
          echo "${{secrets.SSH_PRIVATE_KEY}}" >~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ap40.uw.osg-htc.org >> ~/.ssh/known_hosts

          mkdir -p /tmp/mfc_tmp
          ssh ${{secrets.SSH_USER}} "mkdir -p MFC"

          declare -a images=("cpu" "cpu_bench" "gpu" "gpu_bench")
          for img in "${images[@]}"; do
            sif="mfc_${img}.sif"
            sub="mfc_${img}.sub"
            def="Singularity.${img}"
            (cd pr/.github/workflows/images && sudo apptainer build --force --tmpdir /tmp/mfc_tmp "$sif" "$def")
            scp "pr/.github/workflows/images/$sif" "pr/.github/workflows/images/$sub" ${{secrets.SSH_USER}}:MFC/
            rm -rf "pr/.github/workflows/images/$sif"
            rm -rf ~/.apptainer
            sudo rm -rf /tmp/* /var/lib/apt/lists/* /opt/hostedtoolcache /usr/local/lib/android /usr/share/dotnet /opt/ghc /usr/local/share/boost /usr/lib/jvm /home/runner/.cache /home/runner/work/_temp
            sudo apt-get clean
            mkdir -p /tmp/mfc_tmp
          done

          scp pr/.github/workflows/images/run_mfc.sh ${{secrets.SSH_USER}}:MFC/run_mfc.sh
      
      - name: Test Images
        run: |
          scp pr/.github/workflows/images/*.sub ${{secrets.SSH_USER}}:MFC/

          ssh ${{secrets.SSH_USER}} "
            cd ~/MFC
            condor_submit mfc_cpu.sub
            condor_submit mfc_cpu_bench.sub
            condor_submit mfc_gpu.sub
            condor_submit mfc_gpu_bench.sub

            read CPU CPU_BENCH GPU GPU_BENCH< <(ls -1v *.log | sed -E 's/.*_([0-9]+)_[0-9]+\.log/\1/' | awk '!seen[$0]++' | head -n4 | xargs)

            for cluster in $CPU $CPU_BENCH $GPU $GPU_BENCH; do
              for log in *${cluster}_*.log; do
                condor_wait "$log"
                awk '/SlotName:/, /Memory =/ {block = block $0 ORS} /Memory =/ {last = block; block=""} END {print last}' "$log"
                awk '/Partitionable Resources/,/TimeSlotBusy \(s\)/ {block = block $0 ORS} /TimeSlotBusy \(s\)/ {last = block; block=""} END {if(last) print last}' "$log"
              done
            done
          "
          scp -r ${{secrets.SSH_USER}}:MFC/ pr/.github/workflows/images/
          grep -i 'error' pr/.github/workflows/images/*.out && { echo "Error found in log files."; exit 1; }

      - name: Store Images
        run: |
          ssh ${{secrets.SSH_USER}} "mv /home/mohammed.al-mahrouqi/MFC/*.sif /ospool/ap40/data/mohammed.al-mahrouqi"  

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if:   always()
        with:
          name: singularity-images
          path: |
            pr/.github/workflows/images/*