name: Check Line Counts
on:
  push:

jobs:
  checkbranch:
    name: Check PR Branch status
    runs-on: ubuntu-latest
    outputs:
      branchstat: ${{ steps.brstat.outputs.stat}}
    steps:
      - name: Check code from PR branch 
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Check whether branch is up-to-date
        id: brstat
        run: |
          git remote add MFC https://github.com/MFlowCode/MFC
          git fetch MFC master
          echo "${{ github.event.pull_request.head.sha }}"
          git rev-list --left-right --count  MFC/master...${{ github.event.pull_request.head.sha }} | awk '{print "Behind "$1" - Ahead "$2""}'
          count=$(git rev-list --left-right --count  MFC/master...${{ github.event.pull_request.head.sha }} | awk '{print $1}')
          if [ $count -gt 0 ]
          then
            echo "Current branch is behind MFC master branch!"
            echo "stat=true" >> "$GITHUB_OUTPUT"
          else
            echo "stat=false" >> "$GITHUB_OUTPUT"
          fi

  szdiff:
    name: Core MFC Line Difference
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    needs: checkbranch
    if: needs.checkbranch.outputs.branchstat == 'false'
    steps:
      - name: Checkout code from PR branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr
        # the base default to MFC master and cannot be other fork branch for security purpose
      - name: Checkout code from MFC master
        uses: actions/checkout@v4
        with:
          path: base
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Count Line Diff
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "test_result<<$EOF" >> "$GITHUB_ENV"
          echo "this is only a test" >> "GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"
      - name: Comment Code Line Diff
        continue-on-error: false
      - uses: jwalton/gh-find-current-pr@v1
        id: finder
      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ steps.finder.outputs.pr }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ignore_empty: false
          skip_unchanged: false
          recreate: true
          message: ${{ env.loc_content }}

