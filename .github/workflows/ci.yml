name: 'Test Suite'

on:
  push:
    paths:
      - '**.f90'
      - '**.fpp'
      - '**.py'
      - '**.yml'
      - 'mfc.sh'
      - 'golden.txt'
      - 'CMakeLists.txt'
      - 'requirements.txt'

  pull_request:

  workflow_dispatch:
    
jobs:
  github:
    name: Github
    strategy:
      matrix:
        os:    ['ubuntu']
      fail-fast: false
    continue-on-error: true
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Setup Ubuntu
        if:   matrix.os == 'ubuntu'
        run: |
           sudo apt update -y
           sudo apt install -y tar wget make cmake gcc g++ python3 python3-dev "openmpi-*" libopenmpi-dev

      - name: Build
        run:  |
          /bin/bash mfc.sh build -j $(nproc) 

      - name: Test
        run:  |
          /bin/bash mfc.sh test -j $(nproc) 

  # docker:
  #   name:    Github | Docker
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Clone
  #     uses: actions/checkout@v3

  #   - name: Test
  #     run:  sudo ./mfc.sh docker ./mfc.sh test -j $(nproc) -a

  # self:
  #   name: Georgia Tech | Phoenix (NVHPC)
  #   if: github.repository == 'MFlowCode/MFC'
  #   continue-on-error: true
  #   strategy:
  #     matrix:
  #       device: ['cpu', 'gpu']
  #   runs-on:
  #     group:  phoenix
  #     labels: self-hosted
  #   steps:
  #     - name: Clone
  #       uses: actions/checkout@v3

  #     - name: Build
  #       run:  |
  #         . ./mfc.sh load -c p -m gpu
  #         ./mfc.sh build -j 2 $(if [ '${{ matrix.device }}' == 'gpu' ]; then echo '--gpu'; fi)

  #     - name: Test
  #       run: |
  #         . ./mfc.sh load -c p -m gpu
  #         mv misc/run-phoenix-release-${{ matrix.device }}.sh ./
  #         sbatch run-phoenix-release-${{ matrix.device }}.sh

  #     - name: Print
  #       if: always()
        # run: |
        #   cat test.out

