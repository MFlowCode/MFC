name: PMD

on: [push, pull_request, workflow_dispatch]

jobs:    
  pmd:
      name: PMD Analysis
      runs-on: "ubuntu-latest"
      env:
          pr_everything: 0
      steps:
          - name: Clone - PR
            uses: actions/checkout@v4
            with:
              path: pr

          - name: Clone PMD
            run: |
              sudo apt update -y
              sudo apt install -y tar wget make cmake gcc g++ python3 python3-dev maven
              sudo apt install -y default-jdk
              git clone https://github.com/pmd/pmd.git pmd
              (cd pmd && git checkout)

          - name: Build PMD
            run: |
              (cd pmd && mvn clean install -DskipTests> ../pmd.txt)

          - name: Running PMD
            run: |
              alias pmd="$HOME/pmd/bin/pmd"

              SOURCE_DIR="${1:-pr/src}"
              total_files=$(find "$SOURCE_DIR" -type f \( -name "*.f" -o -name "*.f90" -o -name "*.for" -o -name "*.fpp" -o -name "*.F" -o -name "*.F90" \) | wc -l)
              processed=0

              find "$SOURCE_DIR" -type f \( -name "*.f" -o -name "*.f90" -o -name "*.for" -o -name "*.fpp" -o -name "*.F" -o -name "*.F90" \) -print0 | 
              while IFS= read -r -d $'\0' file; do
                  processed=$((processed + 1))
                  echo -e "[$processed/$total_files] Processing ${file}..."
                  
                  # Create a temporary file with same permissions as original
                  TMP_FILE=$(mktemp)
                  if [ $? -ne 0 ]; then
                      echo -e "Failed to create temporary file for $file, skipping"
                      continue
                  fi
                  
                  # Copy permissions from original file
                  chmod --reference="$file" "$TMP_FILE"
                  
                  # More comprehensive sed command to handle different Fortran comment styles:
                  # 1. Replace lines that are entirely comments with an empty line:
                  #    - Lines starting with '!' (free form comments)
                  #    - Lines starting with 'c', 'C', '*', 'd', 'D' in column 1 (fixed form comments)
                  # 2. Remove end-of-line comments (anything after '!' that isn't in a string)
                  # 3. Preserve strings containing '!' characters
                  sed -E \
                      -e '/^\s*!/s/.*//' \
                      -e '/^[cC*dD]/s/.*//' \
                      -e '/^[ \t]*[cC*dD]/s/.*//' \
                      -e 's/([^"'\'']*("[^"]*"[^"'\'']*|'\''[^'\'']*'\''[^"'\'']*)*[^"'\'']*)[!].*$/\1/' \
                      "$file" > "$TMP_FILE"
                  
                  # Check if file was actually modified before replacing
                  if cmp -s "$file" "$TMP_FILE"; then
                      echo -e "No changes needed for $file"
                      rm "$TMP_FILE"
                  else
                      # Overwrite the original file with the processed content
                      mv "$TMP_FILE" "$file"
                      echo -e "Successfully processed $file"
                  fi
              done
              pmd cpd -l fortran /*  > ../pmd-fort.txt
              pmd cpd -l python pr/toolchain/*  > ../pmd-py.txt

          - name: Display PMD Reports
            run: |
              echo "PMD Fortran Report:"
              cat pmd-fort.txt
              echo "PMD Python Report:"
              cat pmd-py.txt