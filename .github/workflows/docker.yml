name: Containerization

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  Container:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - { name: 'cpu',         base_image: 'ubuntu:22.04'}
          - { name: 'gpu',         base_image: 'nvcr.io/nvidia/nvhpc:23.11-devel-cuda12.3-ubuntu22.04'}

    steps:
      - name: Clone
        uses: actions/checkout@v4
        with:
          path: mfc

      - name: Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Setup
        uses: docker/setup-buildx-action@v3

      - name: Stage
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

          sudo mkdir -p /mnt/share
          sudo chmod 777 /mnt/share
          cp -r mfc/* /mnt/share/
          cp -r mfc/.git /mnt/share/.git
          cp mfc/.github/Dockerfile /mnt/share/
          cp mfc/.github/.dockerignore /mnt/share/
          docker buildx create --name mfcbuilder --driver docker-container --use

      - name: Build and Deploy
        uses: docker/build-push-action@v5
        with:
          builder: mfcbuilder
          context: /mnt/share
          file: /mnt/share/Dockerfile
          build-args: |
            BASE_IMAGE=${{ matrix.config.base_image }}
            TARGET=${{ matrix.config.name }}
            CC_COMPILER=${{ contains(matrix.config.name, 'gpu') && 'nvc' || 'gcc' }}
            CXX_COMPILER=${{ contains(matrix.config.name, 'gpu') && 'nvc++' || 'g++' }}
            FC_COMPILER=${{ contains(matrix.config.name, 'gpu') && 'nvfortran' || 'gfortran' }}
            COMPILER_PATH=${{ contains(matrix.config.name, 'gpu') && '/opt/nvidia/hpc_sdk/Linux_x86_64/compilers/bin' || '/usr/bin' }}
            COMPILER_LD_LIBRARY_PATH=${{ contains(matrix.config.name, 'gpu') && '/opt/nvidia/hpc_sdk/Linux_x86_64/compilers/lib' || '/usr/lib' }}
          tags: sbryngelson/mfc:${{ env.TAG }}-${{ matrix.config.name }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max